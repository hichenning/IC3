<?xml version="1.0" encoding="UTF-8"?>

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  
  <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 定义了ContextLoaderListener要装入的 Spring 配置文件 -->
    <context-param>
    	<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring-core.xml</param-value>
    </context-param>
    

	<!--配置 Spring mvc  -->
	<!-- 
	提供Spring Web MVC的集中访问点，而且负责职责的分派 
	
	DispatcherServlet主要用作职责调度工作，本身主要用于控制流程，主要职责如下：
	1、文件上传解析，如果请求类型是multipart将通过MultipartResolver进行文件上传解析；
	2、通过HandlerMapping，将请求映射到处理器（返回一个HandlerExecutionChain，它包括一个处理器、多个HandlerInterceptor拦截器）；
	3、通过HandlerAdapter支持多种类型的处理器(HandlerExecutionChain中的处理器)；
	4、通过ViewResolver解析逻辑视图名到具体视图实现；
	5、本地化解析；
	6、渲染具体的视图等；
	7、如果执行过程中遇到异常将交给HandlerExceptionResolver来解析。
	-->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<!--  “/” 是用来定义默认servlet映射的。也可以如“*.html”表示拦截所有以html为扩展名的请求。 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

<!-- 字符集  -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
</web-app>
